/**
 * query.l
 * 
 * Flex lexer specification for the jqlite query language.
 * UPGRADED VERSION with support for pipes, select, slicing, and comparisons.
 */

%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "json_value.h"
#include "query.tab.h"  // Generated by Bison, contains token definitions
%}

/* Options for the lexer */
%option noyywrap
%option noinput
%option nounput

%%

    /* Whitespace - ignore */
[ \t\n\r]+              { /* Skip whitespace */ }

    /* Query operators */
"."                     { return DOT; }
"["                     { return LBRACK; }
"]"                     { return RBRACK; }
"|"                     { return PIPE; }
"("                     { return LPAREN; }
")"                     { return RPAREN; }
":"                     { return COLON; }

    /* Comparison operators */
"=="                    { return EQ; }
"!="                    { return NEQ; }
">="                    { return GTE; }
"<="                    { return LTE; }
">"                     { return GT; }
"<"                     { return LT; }

    /* Keywords */
"select"                { return SELECT; }

    /* Numbers (integers and floats) */
-?[0-9]+\.?[0-9]*       {
    query_yylval.number = atof(query_yytext);
    return NUMBER;
}

    /* Field identifiers (alphanumeric + underscore, starting with letter or underscore) */
[a-zA-Z_][a-zA-Z0-9_]*  {
    query_yylval.string = strdup(query_yytext);
    return IDENT;
}

    /* Anything else is an error */
.                       {
    fprintf(stderr, "Query Lexer: Unexpected character '%c'\n", query_yytext[0]);
    return ERROR;
}

%%
